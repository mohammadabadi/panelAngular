!function () { var n = angular.module("elif", []), e = "elif.conditionals", r = function (n) { if (!n || !n.length) return angular.element(); var e = n[0], r = n[n.length - 1]; if (e === r) return angular.element(e); var t = e, l = [t]; do { if (t = t.nextSibling, !t) break; l.push(t) } while (t !== r); return angular.element(l) }; n.factory("elif", [function () { var n = function (n) { if (angular.hasOwnProperty.call(n, e)) { var r = n[e]; return r[r.length - 1] } }; return { create: function (n, r, t) { var l = [{ fn: r, callback: t || angular.identity }], a = []; n.$watch(function () { var n, e = l.length; for (a.length = e, n = 0; e > n; n++)if (a[n] = !!l[n].fn()) { n++; break } for (; e > n; n++)a[n] = !1; return a }, function (n) { for (var e = -1, r = 0, t = l.length; t > r; r++)n[r] ? (l[r].callback(!0), e = r) : l[r].callback(!1); l.fallthrough && l.fallthrough(-1 === e) }, !0), angular.hasOwnProperty.call(n, e) || (n[e] = []), n[e].push(l) }, extend: function (e, r, t) { var l = n(e); if (!l) throw new Error("elif.extend: no if found at this level"); if (l.fallthrough) throw new Error("elif.extend: else-if after else"); l.push({ fn: r, callback: t }) }, fallthrough: function (e, r, t) { var l = n(e); if (!l) throw new Error("elif.fallthrough: no if found at this level"); if (l.fallthrough) throw new Error("elif.fallthrough: else already found at this level"); l.fallthrough = t } } }]); var t = function (e, t, l) { n.directive(e, ["$animate", "$document", "$injector", "elif", function (n, a, i, f) { var o = l && i.invoke(l); return { transclude: "element", restrict: "A", priority: 600, terminal: !0, link: function (l, i, u, c, h) { var g, v, d, s = o && o(l, i, u); f[t](l, s, function (t) { t ? g || (g = l.$new(), h(g, function (r) { r[r.length + 1] = a[0].createComment(" end " + e + ": " + u[e] + " "), v = r, n.enter(r, i.parent(), i) })) : (g && (g.$destroy(), g = null), d && (d.remove(), d = null), v && (d = r(v), n.leave(d, function () { d = null }), v = null)) }) } } }]) }, l = function (n) { return ["$parse", function (e) { return function (r, t, l) { var a = e(l[n]); return function () { return !!a(r) } } }] }; n.directive("ngIf", ["$injector", "elif", function (n, e) { var r = n.invoke(l("ngIf")); return { priority: 600, link: function (n, t, l) { var a = r(n, t, l); e.create(n, a) } } }]), t("ngElseIf", "extend", l("ngElseIf")), t("ngElif", "extend", l("ngElif")), t("ngElse", "fallthrough") }();